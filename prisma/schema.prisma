// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  individualUser IndividualUser?
  companyUser    CompanyUser?
  address        Address?

  ads Ad[]
}

model IndividualUser {
  userId Int    @id
  cpf    String @unique
  user   User   @relation(fields: [userId], references: [id])
}

model CompanyUser {
  userId Int    @id
  cnpj   String @unique
  user   User   @relation(fields: [userId], references: [id])
}

model Address {
  id           Int    @id @default(autoincrement())
  userId       Int    @unique
  cep          String
  city         String
  street       String
  neighborhood String
  user         User   @relation(fields: [userId], references: [id])
}

model Pet {
  id        Int      @id @default(autoincrement())
  name      String
  gender    String
  size      String
  birthDate DateTime
  vaccines  String[]
  // description String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ads Ad[]
}

model Ad {
  id          Int      @id @default(autoincrement())
  description String
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())

  pet   Pet @relation(fields: [petId], references: [id])
  petId Int 

  user   User @relation(fields: [userId], references: [id])
  userId Int
}
